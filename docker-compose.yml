version: "3.7"

services:
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
            - "81:81"
            - "82:82"
            - "443:443"
        volumes:
            - ./hosts:/etc/nginx/conf.d
            - ./www:/var/www/main
            - ./services/dialog_service/www:/var/www/dialog
            - ./services/notification_service/www:/var/www/notification
            - ./logs/nginx:/var/log/nginx
        links:
            - php
    php:
        build: ./images/php
        container_name: php
        links:
            - mysql1
        volumes:
            - ./www:/var/www/main
            - ./services/dialog_service/www:/var/www/dialog
            - ./services/notification_service/www:/var/www/notification
    mysql1:
        build: ./images/mysql1
        container_name: mysql1
        ports:
            - "3306:3306"
        volumes:
         - ./logs/mysql:/var/log/mysql
         - ./db/mysql:/var/lib/mysql
         - ./db/mysql-files:/var/lib/mysql-files
         - ./data:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: test
            MYSQL_DATABASE: zabbix
            MYSQL_USER: zabbix
            MYSQL_PASSWORD: zabbix
    # mysql2:
    #     build: ./images/mysql2
    #     ports:
    #         - "3307:3307"
    #     volumes:
    #      - ./logs/mysql2:/var/log/mysql
    #      - ./db/mysql2:/var/lib/mysql
    #      - ./db/mysql-files2:/var/lib/mysql-files
    #      - ./data:/docker-entrypoint-initdb.d
    #     environment:
    #         MYSQL_ROOT_PASSWORD: test
    #         MYSQL_DATABASE: social_db
    # mysql3:
    #     build: ./images/mysql3
    #     ports:
    #         - "3308:3308"
    #     volumes:
    #      - ./logs/mysql3:/var/log/mysql
    #      - ./db/mysql3:/var/lib/mysql
    #      - ./db/mysql-files3:/var/lib/mysql-files
    #      - ./data:/docker-entrypoint-initdb.d
    #     environment:
    #         MYSQL_ROOT_PASSWORD: test
    #         MYSQL_DATABASE: social_db
    # proxysql:
    #     build: ./images/proxysql
    #     container_name: proxysql
    #     volumes:
    #       - ./db/proxysql:/var/lib/proxysql
    #     ports:
    #       # Mysql Client Port
    #       - "6033:6033"
    #       # Mysql Admin Port
    #       - "6032:6032"
    rabbitmq:
        image: rabbitmq:3.9-management-alpine
        container_name: 'rabbitmq'
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./libs/rabbitmq:/var/lib/rabbitmq/
            - ./logs/rabbitmq:/var/log/rabbitmq/
    redis:
        image: "redis:alpine"
        command: redis-server --requirepass testpass
        ports:
            - "6379:6379"
        volumes:
            - ./libs/redis:/var/lib/redis
      #      - ./libs/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_REPLICATION_MODE=master
    # tarantool:
    #     image: "tarantool/tarantool:2.6.0"
    #     container_name: 'mytarantool'
    #     ports:
    #         - "3301:3301"
    #     volumes:
    #         - ./libs/tarantool:/var/lib/tarantool
    #     environment:
    #         - TARANTOOL_USER_NAME=root
    #         - TARANTOOL_USER_PASSWORD=test

    zabbix-server:
        image: zabbix/zabbix-server-mysql:alpine-latest
        container_name: zabbix-server
        environment:
            DB_SERVER_HOST: mysql1
            MYSQL_DATABASE: zabbix
            MYSQL_USER: zabbix
            MYSQL_PASSWORD: zabbix
            MYSQL_ROOT_PASSWORD: test
        ports:
            - '10051:10051'
        restart: always
        links:
            - mysql1
        depends_on:
            - mysql1
    zabbix-web:
        image: zabbix/zabbix-web-nginx-mysql:alpine-latest
        container_name: zabbix-web
        environment:
            DB_SERVER_HOST: mysql1
            MYSQL_ROOT_PASSWORD: test
            MYSQL_USER: zabbix
            MYSQL_PASSWORD: zabbix
            ZBX_SERVER_HOST: zabbix-server
            PHP_TZ: Europe/Moscow
        ports:
            - '84:8080'
        restart: always
        links:
            - zabbix-server
        depends_on:
            - zabbix-server
    zabbix-agent:
        image: zabbix/zabbix-agent:latest
        container_name: zabbix-agent
        privileged: true
        restart: unless-stopped
        environment:
            ZBX_SERVER_HOST: zabbix-server
        volumes:
             - ./libs/zabbix_agent:/etc/zabbix
        links:
            - zabbix-server
        depends_on:
            - zabbix-server
    nginx-exporter:
        image: nginx/nginx-prometheus-exporter:latest
        container_name: nginx-exporter
        restart: unless-stopped
        environment:
            - SCRAPE_URI=http://nginx/nginx_status
            - TELEMETRY_PATH=/metrics
            - NGINX_RETRIES=10
        ports:
            - "9113:9113"
        logging:
            driver: "json-file"
            options:
                max-size: "5m"
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./libs/prometheus:/etc/prometheus/
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        restart: always
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - 3000:3000
        volumes:
            - ./libs/grafana:/var/lib/grafana
            - ./libs/grafana_provisioning/:/etc/grafana/provisioning/
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=test
            - GF_USERS_ALLOW_SIGN_UP=false
        restart: always
        depends_on:
            - prometheus